"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'onpp^$wv8mu80#m#p8^h*5)j@d4^!a9u6rgeva!@yfh5u4b_zk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '.nowpython.cn']


# Application definition

INSTALLED_APPS = [
    'suit',
    'haystack',
    'blog',
    'crispy_forms',
    'imagekit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.weibo',
    'allauth.socialaccount.providers.github',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blogdb',
        'USER': 'root',
        'PASSWORD': '1204',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# 多媒体文件
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# 自定义用户模型
AUTH_USER_MODEL = 'blog.User'

# haystack搜索引擎
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'blog.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 邮箱设置
EMAIL_HOST = 'smtp.qq.com'
EMAIL_HOST_USER = '290704731@qq.com'
EMAIL_HOST_PASSWORD = 'zjlrxtanevucbiei'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = '290704731@qq.com'


# 用户认证后端
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# django-suit时间格式
DATETIME_FORMAT = 'Y-m-d H:i:s'
DATE_FORMAT = 'Y-m-d'

SUIT_CONFIG = {
    # header
    'ADMIN_NAME': '管理系统',
    'LIST_PER_PAGE': 10,
    'MENU': (
        'sites',
        {'app': 'blog', 'label': '博客', 'icon': 'icon-wrench'},
    ),
}

# crispy指定样式bootstrap3
CRISPY_TEMPLATE_PACK = 'bootstrap3'

# all-auth设置
SITE_ID = 1
# 用户名或密码登录
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
# 注册时必须使用邮箱
ACCOUNT_EMAIL_REQUIRED = True
# 直接退出，无需点击确认表单
ACCOUNT_LOGOUT_ON_GET = True
# 必须验证邮箱地址
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# 点击链接直接确认邮箱，无需点击确认表单
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
# 社交账户不需要验证邮箱
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/accounts/login'

# 七牛云存储
QINIU_ACCESS_KEY = '6H-fnNIXpfFqEF5VBVWh-j5mmiCDIqciifw0jmwZ'
QINIU_SECRET_KEY = 'BPorT5V2uTa_W85mpoRB1PxTbXxcYKNOzZmydi2p'
QINIU_BUCKET_NAME = 'nowpython'
QINIU_BUCKET_DOMAIN = 'p2lgdfnha.bkt.clouddn.com'
DEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuStorage'
